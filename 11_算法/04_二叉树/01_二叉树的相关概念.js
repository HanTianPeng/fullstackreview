/*
什么是树？
    树是一种非线性的数据结构,分层存储；
    仅有唯一一个根节点，没有节点则为空树
    除根节点外，每个节点都有并仅有唯一一个父节点
    节点间不能形成闭环

树的常见概念:
    拥有相同父节点的节点，相互称为兄弟节点
    节点的深度: 从根节点到该节点所经历的边的个数
    节点的高度: 节点到叶节点的最长路径
    树的高度: 根节点的高度

二叉树:
    最多仅有两个子节点的树(最多能分成两个叉的树)

平衡二叉树:
    二叉树中，每个节点的左右子树的高度相差不能大于1，称之为平衡二叉树

满二叉树:
    除了叶节点外每一个节点都有左右子叶且叶子节点都处在最底层的二叉树

完全二叉树:
    深度为h，除第h层外，其他各层(1~h-1)的节点数都达到最大个数，第h层所有的节点都连续集中在最左边

二叉树的遍历:
    前序遍历: 对于二叉树中的任意一个节点, 先打印该节点, 然后是它的左子树, 最后右子树
                ---A---
            ---B---             ---C---
        ---D---     ---E---             ---F---

        A -> B -> D -> E -> C -> F

    中序遍历: 对于二叉树中的任意一个节点, 先打印它的左子树, 然后就是该节点, 最后右子树
        D -> B -> E -> A -> C -> F

    后序遍历: 对于二叉树中的任意一个节点, 先打印它的左子树, 然后是右子树, 最后该节点
        D -> E -> B -> F -> C -> A

  2. 树被用来存储具有层级关系的数据,还被用来存储有序列表

  3. 二叉树进行查找特别快,二叉树的添加或删除也非常块

  4. 集合中不允许相同成员存在
  
  - 02-最大/最小深度

  - 03-LCA问题

  - 04-对称二叉树

  - 05-路径相关问题
    - 二叉树直径

    - 所有路径

    - 最大路径和

  - 06-二叉搜索树
    - 验证二叉搜索树

    - 有序数组 -> 二叉搜索树

    - 不同的二叉搜索树
*/